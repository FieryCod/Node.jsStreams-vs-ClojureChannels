["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$streams-vs-channels.tools","~:imports",null,"~:requires",["^ ","~$async","~$cljs.core.async","^:","^:","~$clojure.core.async","^:","~$settings","~$streams-vs-channels.settings","^=","^=","~$streams-vs-channels.nodejs","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$elapsed-time",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/tools.cljs","~:line",6,"~:column",7,"~:end-line",6,"~:end-column",19,"~:arglists",["~#list",["~$quote",["^K",[["~$start-time"]]]]],"~:doc","Taken from cljs.core. Measures the time using the start time"],"^5","~$streams-vs-channels.tools/elapsed-time","~:variadic",false,"^E","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/tools.cljs","^I",19,"~:method-params",["^K",[["^M"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^G",1,"^F",6,"^H",6,"~:max-fixed-arity",1,"~:fn-var",true,"^J",["^K",["^L",["^K",[["^M"]]]]],"^N","Taken from cljs.core. Measures the time using the start time"],"~$print-exit-program-msg",["^ ","^C",null,"^D",["^ ","^E","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/tools.cljs","^F",11,"^G",7,"^H",11,"^I",29,"^J",["^K",["^L",["^K",[["^M"]]]]]],"^5","~$streams-vs-channels.tools/print-exit-program-msg","^P",false,"^E","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/tools.cljs","^I",29,"^Q",["^K",[["^M"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^F",11,"^H",11,"^T",1,"^U",true,"^J",["^K",["^L",["^K",[["^M"]]]]]],"~$promise->chan",["^ ","^C",null,"^D",["^ ","^E","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/tools.cljs","^F",16,"^G",7,"^H",16,"^I",20,"^J",["^K",["^L",["^K",[["~$p"]]]]],"^N","Converts the promise to channel"],"^5","~$streams-vs-channels.tools/promise->chan","^P",false,"^E","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/tools.cljs","^I",20,"^Q",["^K",[["~$p"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^F",16,"^H",16,"^T",1,"^U",true,"^J",["^K",["^L",["^K",[["~$p"]]]]],"^N","Converts the promise to channel"],"~$create-writeable-streams",["^ ","^C",null,"^D",["^ ","^E","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/tools.cljs","^F",23,"^G",7,"^H",23,"^I",31,"^J",["^K",["^L",["^K",[[]]]]],"^N","Returns the writable streams of files fizz, buzz, fizzbuzz and others"],"^5","~$streams-vs-channels.tools/create-writeable-streams","^P",false,"^E","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/tools.cljs","^I",31,"^Q",["^K",[[]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^F",23,"^H",23,"^T",0,"^U",true,"^J",["^K",["^L",["^K",[[]]]]],"^N","Returns the writable streams of files fizz, buzz, fizzbuzz and others"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^9","^:","^:","^:","^;","^:"],"^N",null]