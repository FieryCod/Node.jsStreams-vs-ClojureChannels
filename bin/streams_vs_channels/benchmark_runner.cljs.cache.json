["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$setTimeout",["^ "],"~$Object",["^ ","~$heapUsed",["^ "]],"~$Math",["^ ","~$round",["^ "]],"~$process",["^ ","~$memoryUsage",["^ "],"~$_getActiveRequests",["^ "]]],"~:use-macros",["^ ","~$with-timeout","~$streams-vs-channels.macros.core","~$with-monitor","^="],"~:excludes",["~#set",[]],"~:name","~$streams-vs-channels.benchmark-runner","~:imports",null,"~:requires",["^ ","~$streams-vs-channels.streams-example.stream","^E","~$streams-vs-channels.channels-example.channel","^F","~$streams-vs-channels.tools","^G","~$close-emitter","~$foreign.CloseProgramEventEmitter","~$async","~$cljs.core.async","^K","^K","~$channel-example","^F","~$clojure.core.async","^K","~$tools","^G","^=","^=","~$stream-example","^E","^I","^I"],"~:cljs.spec/speced-vars",[],"~:uses",["^ "],"~:defs",["^ ","~$welcome-str",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/benchmark_runner.cljs","~:line",9,"~:column",8,"~:end-line",9,"~:end-column",19,"~:private",true,"~:arglists",["~#list",["~$quote",["^11",[[]]]]]],"^[",true,"^A","~$streams-vs-channels.benchmark-runner/welcome-str","~:variadic",false,"^V","src/streams_vs_channels/benchmark_runner.cljs","^Z",19,"~:method-params",["^11",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^11",[null,null]],"^X",1,"^W",9,"^Y",9,"~:max-fixed-arity",0,"~:fn-var",true,"^10",["^11",["^12",["^11",[[]]]]]],"~$benchmark-runner",["^ ","^T",null,"^U",["^ ","^V","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/benchmark_runner.cljs","^W",14,"^X",7,"^Y",14,"^Z",23,"^10",["^11",["^12",["^11",[["~$benchmark","~$times"]]]]]],"^A","~$streams-vs-channels.benchmark-runner/benchmark-runner","^14",false,"^V","src/streams_vs_channels/benchmark_runner.cljs","^Z",23,"^15",["^11",[["^1;","^1<"]]],"^16",null,"^17",["^11",[null,null]],"^X",1,"^W",14,"^Y",14,"^18",2,"^19",true,"^10",["^11",["^12",["^11",[["^1;","^1<"]]]]]],"~$setup-benchmark",["^ ","^T",null,"^U",["^ ","^V","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/benchmark_runner.cljs","^W",20,"^X",7,"^Y",20,"^Z",22,"^10",["^11",["^12",["^11",[["~$name","~$process-fn"]]]]]],"^A","~$streams-vs-channels.benchmark-runner/setup-benchmark","^14",false,"^V","src/streams_vs_channels/benchmark_runner.cljs","^Z",22,"^15",["^11",[["^1?","^1@"]]],"^16",null,"^17",["^11",[null,null]],"^X",1,"^W",20,"^Y",20,"^18",2,"^19",true,"^10",["^11",["^12",["^11",[["^1?","^1@"]]]]]],"~$run-channels-benchmark",["^ ","^A","~$streams-vs-channels.benchmark-runner/run-channels-benchmark","^V","src/streams_vs_channels/benchmark_runner.cljs","^W",38,"^X",1,"^Y",38,"^Z",28,"^U",["^ ","^V","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/benchmark_runner.cljs","^W",38,"^X",6,"^Y",38,"^Z",28],"~:tag","~$any"],"~$run-streams-benchmark",["^ ","^A","~$streams-vs-channels.benchmark-runner/run-streams-benchmark","^V","src/streams_vs_channels/benchmark_runner.cljs","^W",40,"^X",1,"^Y",40,"^Z",27,"^U",["^ ","^V","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/benchmark_runner.cljs","^W",40,"^X",6,"^Y",40,"^Z",27],"^1D","^1E"],"~$run-streams-with-transform-benchmark",["^ ","^A","~$streams-vs-channels.benchmark-runner/run-streams-with-transform-benchmark","^V","src/streams_vs_channels/benchmark_runner.cljs","^W",42,"^X",1,"^Y",42,"^Z",42,"^U",["^ ","^V","/Users/karol/workspace/clojure/streams_vs_channels/src/streams_vs_channels/benchmark_runner.cljs","^W",42,"^X",6,"^Y",42,"^Z",42],"^1D","^1E"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^J","^K","^K","^K","^M","^K","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^@",["~:else","~:recur"]],"~:order",["^1O","^1N"]],"~:doc",null]